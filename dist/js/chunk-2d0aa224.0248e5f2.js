(window.webpackJsonp = window.webpackJsonp || []).push([['chunk-2d0aa224'], {
  '105d': function (t, n, o) {
    o.r(n); const a = function () { const t = this; const n = t.$createElement; const o = t._self._c || n; return o('mu-flex', { staticClass: 'container', attrs: { direction: 'column' } }, [o('mu-alert', { staticStyle: { 'flex-direction': 'column' }, attrs: { color: 'info' } }, [t._v('\n    Basic icons are based on material design icons. Additional icons are based on iconfont. A simple demo below. Check the document for more information.Â '), o('a', { attrs: { href: 'https://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.15&helptype=code' } }, [t._v('link to Iconfont help')])]), o('mu-row', { staticClass: 'row-item', attrs: { gutter: '' } }, [o('mu-col', { attrs: { span: '4' } }, [t._v('Using mu-icon with material design icons')]), o('mu-col', { attrs: { span: '8' } }, [o('mu-icon', { attrs: { value: 'android' } }), o('mu-icon', { attrs: { value: 'loop' } }), o('mu-icon', { attrs: { value: 'add' } }), o('mu-icon', { attrs: { value: 'call' } })], 1)], 1), o('mu-row', { staticClass: 'row-item', attrs: { gutter: '' } }, [o('mu-col', { attrs: { span: '4' } }, [t._v('Using mu-icon with iconfont')]), o('mu-col', { attrs: { span: '8' } }, [o('mu-icon', { attrs: { value: ':iconfont iconicon_search' } }), o('mu-icon', { attrs: { value: ':iconfont iconarrawsalt' } }), o('mu-icon', { attrs: { value: ':iconfont iconcamera' } }), o('mu-icon', { attrs: { value: ':iconfont iconCI' } })], 1)], 1)], 1); }; const e = []; const c = {
      components: {}, props: {}, data() { return {}; }, beforeCreate() {}, created() {}, beforeMount() {}, mounted() {}, beforeUpdate() {}, updated() {}, activated() {}, deactivated() {}, beforeDestroy() {}, destroyed() {}, errorCaptured() {}, methods: {}, filter: {}, computed: {}, watch: {},
    }; const i = c; const r = o('2877'); const s = Object(r.a)(i, a, e, !1, null, 'af1dc322', null); n.default = s.exports;
  },
}]);
